// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(cuid())
  email      String     @unique
  name       String?
  password   String
  image      String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  properties Property[]
  bookmarks  Property[] @relation("UserBookmarks")
  messages   Message[]
}

model Property {
  id           String    @id @default(cuid())
  userId       String
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  title        String
  description  String
  location     String
  type         String // House, Apartment, Condo, etc.
  status       String // For Rent, For Sale
  price        Float
  bedrooms     Int
  bathrooms    Int
  squareFeet   Float?
  amenities    String[]
  rates        Json? // For custom rate structures
  images       String[] // URLs to property images
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  bookmarkedBy User[]    @relation("UserBookmarks")
  messages     Message[]
}

model Message {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  propertyId String
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  content    String
  read       Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
